{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/message.service.ts","webpack:///src/app/messages/messages.component.ts","webpack:///src/app/messages/messages.component.html","webpack:///src/app/mock-tasks.ts","webpack:///src/app/task-detail/task-detail.component.ts","webpack:///src/app/task-detail/task-detail.component.html","webpack:///src/app/task.service.ts","webpack:///src/app/task/task.component.ts","webpack:///src/app/task/task.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","DashboardComponent","taskService","tasks","getTasks","self","subscribe","console","log","results","pageData","task","selectedTask","MessageService","messages","message","push","providedIn","messageService","MessagesComponent","TASKS","description","user","email","isCofirmed","TaskDetailComponent","TaskService","http","taskUrl","add","get","find","TaskComponent","openedTask","environment","production","catch","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TaskComponent } from './task/task.component';\nimport { DashboardComponent }   from './dashboard/dashboard.component';\nimport { TaskDetailComponent }  from './task-detail/task-detail.component';\n\nconst routes: Routes = [\n\t{ path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n\t{ path: 'dashboard', component: DashboardComponent },\n\t{ path: 'tasklist', component: TaskComponent },\n\t{ path: 'detail/:id', component: TaskDetailComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.scss\"]\n})\nexport class AppComponent {\n  title = \"Менеджер задач\";\n}\n","<header>\n\t<nav class=\"menu mainMenu\">\n<!-- \t    <div class=\"menu__item menuBrand\">\n\t    \t<a routerLink=\"/\" class=\"menuItem__content\">\n\t    \t\t<i class=\"fas fa-home\"></i>\n\t    \t</a>\n\t    </div> -->\n\t    <div class=\"menu__item\">\n\t        <a routerLink=\"/dashboard\" class=\"menuItem__content\">Главная</a>\n\t    </div>\n\t    <div class=\"menu__item\">\n\t        <a routerLink=\"/tasklist\" class=\"menuItem__content\">Задачи</a>\n\t    </div>\n\t</nav>\n</header>\n\n<main>\n\t<h1 class=\"pageTitle\">{{ title }}</h1>\n\t<router-outlet></router-outlet>\n</main>\n\n<app-messages></app-messages>","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from \"./app.component\";\nimport { TaskComponent } from \"./task/task.component\";\nimport { TaskDetailComponent } from './task-detail/task-detail.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\n@NgModule({\n  declarations: [AppComponent, TaskComponent, TaskDetailComponent, MessagesComponent, DashboardComponent],\n  imports: [BrowserModule, FormsModule, AppRoutingModule, HttpClientModule,],\n  providers: [],\n  // providers: [{provide: APP_BASE_HREF, useValue : '/' }]\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Task } from '../task';\nimport { TaskService } from '../task.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\ttasks: Task[] = [];\t\n  selectedTask: Task;\n  pageData: {};\n\n  constructor(private taskService: TaskService) { }\n\n  ngOnInit(): void {\n  \tthis.getTasks();\n  }\n\n  getTasks(): void {\n    const self = this;\n    this.taskService.getTasks()\n      .subscribe(function(tasks) {\n        console.log(tasks)\n        self.tasks = tasks.results;\n        self.pageData = tasks;\n      });\n  \t// this.taskService.getTasks()\n  \t// \t.subscribe(tasks => this.tasks = tasks.slice(0, 3))\n  }\n\n  onSelect(task: Task): void {\n    this.selectedTask = task;\n    // this.messageService.add(`TaskService: Selected task id=${task.id}`);\n  }\n}\n","<section>\n\t<h1>Основные задачи</h1>\n\t<nav class=\"taskInfo\">Выполнено: 0/3</nav>\n\t<div class=\"task\" *ngFor=\"let task of tasks\">\n\t\t<div class=\"taskValue taskState\"><input type=\"checkbox\"></div>\n\t\t<span class=\"taskValue taskTitle\">task.title</span>\n\t\t<div class=\"taskValue\">\n\t\t\t<button type=\"button\" class=\"taskDetails\" (click)=\"onSelect(task)\">-></button>\n\t\t\t<!-- <a type=\"button\" class=\"taskDetails\" routerLink=\"/detail/{{ task.id }}\">-></a> -->\n\t\t</div>\n\t</div>\n</section>\n\n<!-- commint on link -->\n<app-task-detail [task]=\"selectedTask\"></app-task-detail>","import { Injectable } from \"@angular/core\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MessageService {\n  messages: string[] = [];\n\n  add(message: string) {\n    this.messages.push(message);\n  }\n\n  clear() {\n    this.messages = [];\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { MessageService } from \"../message.service\";\n\n@Component({\n  selector: \"app-messages\",\n  templateUrl: \"./messages.component.html\",\n  styleUrls: [\"./messages.component.scss\"]\n})\nexport class MessagesComponent implements OnInit {\n  constructor(public messageService: MessageService) {}\n\n  ngOnInit(): void {}\n}\n","<div *ngIf=\"messageService.messages.length\">\n    <h2>Messages</h2>\n    <button class=\"clear\" (click)=\"messageService.clear()\">clear</button>\n    <div *ngFor='let message of messageService.messages'> {{message}} </div>\n</div>","import { Task } from \"./task\";\n\nexport const TASKS: Task[] = [\n  {\n    id: 1,\n    title: \"Task Title 1\",\n    description: \"Some text here\",\n    user: \"Mirehiko\",\n    email: \"mirehiko@gmail.ru\",\n    isCofirmed: false\n  },\n  {\n    id: 2,\n    title: \"Task Title 2\",\n    description: \"Some text here\",\n    user: \"Mirehiko\",\n    email: \"mirehiko@gmail.ru\",\n    isCofirmed: false\n  },\n  {\n    id: 3,\n    title: \"Task Title 3\",\n    description: \"Some text here\",\n    user: \"Mirehiko\",\n    email: \"mirehiko@gmail.ru\",\n    isCofirmed: false\n  },\n  {\n    id: 4,\n    title: \"Task Title 4\",\n    description: \"Some text here\",\n    user: \"Mirehiko\",\n    email: \"mirehiko@gmail.ru\",\n    isCofirmed: false\n  }\n];\n","import { Component, OnInit, Input } from \"@angular/core\";\n//for work with link\n// import { ActivatedRoute } from '@angular/router';\n// import { Location } from '@angular/common';\n\nimport { Task } from \"../task\";\nimport { TaskService }  from '../task.service';\n\n@Component({\n  selector: \"app-task-detail\",\n  templateUrl: \"./task-detail.component.html\",\n  styleUrls: [\"./task-detail.component.scss\"]\n})\nexport class TaskDetailComponent implements OnInit {\n  @Input() task: Task; //old\n  // task: Task;//for link\n\n  constructor() {}\n  // constructor(//for link\n  //   private route: ActivatedRoute,\n  //   private taskService: TaskService,\n  //   private location: Location\n  // ) {}\n\n\n  ngOnInit(): void {} //old\n  // ngOnInit(): void {//for link\n  //   this.getTask();\n  // }\n\n  // getTask(): void {//for link\n  //   const id = +this.route.snapshot.paramMap.get('id');\n  //   this.taskService.getTask(id)\n  //     .subscribe(task => this.task = task);\n  // }\n\n  onClose(task: Task): void {\n    this.task = null;\n  }\n\n  onConfirm(task: Task): void {\n    this.task = null;\n  }\n}\n","<form class=\"taskForm\" state=\"visible\" *ngIf=\"task\">\n    <h2 class=\"taskTitle\">Редактирование</h2>\n    <input type=\"hidden\" name=id value=\"{{ task.id }}\">\n    <input type=\"text\" name=\"title\" placeholder=\"Имя задачи\" class=\"inputField\" [(ngModel)]=\"task.title\">\n    <textarea type=\"text\" name=\"description\" placeholder=\"Описание\" class=\"inputField\"\n        [(ngModel)]=\"task.description\"></textarea>\n    <input type=\"text\" name=\"user\" placeholder=\"ФИО\" class=\"inputField\" [(ngModel)]=\"task.user\">\n    <input type=\"email\" name=\"email\" placeholder=\"Email\" class=\"inputField\" [(ngModel)]=\"task.email\">\n    <button type=\"confirm\" class=\"btn btnConfirm\" (click)=\"onConfirm(task)\">Принять</button>\n    <button type=\"button\" class=\"btn btnClose\" (click)=\"onClose(task)\">\n        <i class=\"fas fa-times\" aria-hidden=\"true\"></i>\n    </button>\n</form>","import { Injectable } from \"@angular/core\";\nimport { Observable, of } from \"rxjs\";\nimport { MessageService } from \"./message.service\";\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Task } from \"./task\";\nimport { Page } from \"./page\";\nimport { TASKS } from \"./mock-tasks\";\nimport { PAGES } from \"./mock-pages\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TaskService {\n  private taskUrl = 'api/tasklist';\n\n  constructor(private http: HttpClient, private messageService: MessageService) {}\n \n  // getTasks(): Observable<Task[]> {\n  //   this.messageService.add(\"TaskService: fetched tasks\");\n  //   return of(TASKS);\n  //   // return this.http.get<Task[]>(this.taskUrl);\n  // }\n  getTasks(): Observable<Page> {\n    this.messageService.add(\"TaskService: fetched tasks\");\n    // return of(PAGES);\n    return this.http.get<Page>(this.taskUrl);\n  }\n\tgetTask(id: number): Observable<Task> {\n\t  this.messageService.add(`TaskService: fetched task id=${id}`);\n\t  return of(TASKS.find(task => task.id === id));\n\t}\n\n  private log(message: string) {\n    this.messageService.add(`TaskService: ${message}`);\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { Task } from \"../task\";\nimport { TaskService } from \"../task.service\";\nimport { MessageService } from \"../message.service\";\n\n@Component({\n  selector: \"app-task\",\n  templateUrl: \"./task.component.html\",\n  styleUrls: [\"./task.component.scss\"]\n})\nexport class TaskComponent implements OnInit {\n  tasks: Task[];\n  pageData: {};\n  \n\n  selectedTask: Task;\n  openedTask: Task;\n\n  constructor(\n    private taskService: TaskService,\n    private messageService: MessageService\n  ) {}\n\n  ngOnInit(): void {\n    this.getTasks();\n  }\n\n  getTasks(): void {\n    const self = this;\n    this.taskService.getTasks()\n      .subscribe(function(tasks) {\n        console.log(tasks)\n        self.tasks = tasks.results;\n        self.pageData = tasks;\n      });\n    // this.taskService.getTasks().subscribe(tasks => (this.tasks = tasks));\n  }\n\n  onSelect(task: Task): void {\n    this.selectedTask = task;\n    this.messageService.add(`TaskService: Selected task id=${task.id}`);\n  }\n\n  onOpen(task: Task): void {\n    this.openedTask = task;\n  }\n\n  // onClose(task: Task): void {\n  //   this.selectedTask = null;\n  // }\n\n  // onConfirm(task: Task): void {\n  //   this.selectedTask = null;\n  // }\n}\n","<h2 class=\"\">Список задач</h2>\n\n<div class=\"taskList\">\n    <div class=\" task\" *ngFor=\"let task of tasks\" [class.task-opened]=\"task === openedTask\">\n        <div class=\"taskHeader\">\n            <span class=\"taskHeader__item taskTitle\">{{ task.title }}</span>\n            <span class=\"taskHeader__item taskUser\">{{ task.user }}</span>\n            <span class=\"taskHeader__item taskEmail\">{{ task.email }}</span>\n            <!-- for link -->\n<!--             <a class=\"btn taskHeader__item taskEdit\" routerLink=\"/detail/{{ task.id }}\">\n                edit\n                <i class=\"far fa-edit\" aria-hidden=\"true\"></i>\n            </a> -->\n            <button type=\"button\" class=\"btn taskHeader__item taskEdit\" (click)=\"onSelect(task)\">\n                edit\n                <i class=\"far fa-edit\" aria-hidden=\"true\"></i>\n            </button>\n            <button type=\"button\" class=\"btn taskHeader__item taskRemove\">\n                remove\n                <i class=\"far fa-trash-alt\" aria-hidden=\"true\"></i>\n            </button>\n        </div>\n        <div class=\"taskBody\">\n            <div>{{ task.description }}</div>\n        </div>\n    </div>\n</div>\n\n<!-- commint on link -->\n<app-task-detail [task]=\"selectedTask\"></app-task-detail>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\n\nimport { AppModule } from \"./app/app.module\";\nimport { environment } from \"./environments/environment\";\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}