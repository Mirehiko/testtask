{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/main-menu/main-menu.component.ts","webpack:///src/app/main-menu/main-menu.component.html","webpack:///src/app/message.service.ts","webpack:///src/app/pagination/pagination.component.ts","webpack:///src/app/pagination/pagination.component.html","webpack:///src/app/task-detail/task-detail.component.ts","webpack:///src/app/task-detail/task-detail.component.html","webpack:///src/app/task.service.ts","webpack:///src/app/task/task.component.ts","webpack:///src/app/task/task.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","withConfig","position","horizontal","vertical","behaviour","autoHide","declarations","providers","bootstrap","DashboardComponent","taskService","notifierService","tasks","sortKey","sortWay","page","countConfirmed","notifier","getTasks","params","onMain","subscribe","data","console","log","results","pageData","calcConfirmed","task","isCofirmed","updateTask","notify","selectedTask","onClose","MainMenuComponent","MessageService","messages","message","push","providedIn","PaginationComponent","pageChange","pageInfo","emit","TaskDetailComponent","route","location","taskChange","event","key","user","email","TaskService","http","messageService","taskUrl","createURL","updateURL","removeURL","httpOptions","headers","options","set","taskPerPage","get","url","post","TaskComponent","prev","next","isInserting","isNewConfirmed","isNewOnMain","descCtrl","filter","h","sendData","deleteTask","taskTitle","taskDescribe","taskUser","taskEmail","newtask","description","addTask","onInsert","sort","setPage","environment","production","catch","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TaskComponent } from './task/task.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { TaskDetailComponent } from './task-detail/task-detail.component';\n\nconst routes: Routes = [\n\t{ path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n\t{ path: 'dashboard', component: DashboardComponent },\n\t{ path: 'tasklist', component: TaskComponent },\n\t{ path: 'detail/:id', component: TaskDetailComponent },\n];\n\n@NgModule({\n\timports: [RouterModule.forRoot(routes)],\n\texports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n// import { HostListener, Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Менеджер задач';\n}\n","<header>\n\t<app-main-menu></app-main-menu>\n</header>\n\n<main>\n\t<h1 class=\"pageTitle\">{{ title }}</h1>\n\t<router-outlet></router-outlet>\n</main>\n\n<!-- <app-messages></app-messages> -->","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NotifierModule } from 'angular-notifier';\n// import { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\n// import { InMemoryDataService } from './in-memory-data.service';\n\nimport { AppComponent } from './app.component';\nimport { TaskComponent } from './task/task.component';\nimport { TaskDetailComponent } from './task-detail/task-detail.component';\n// import { MessagesComponent } from './messages/messages.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { PaginationComponent } from './pagination/pagination.component';\nimport { MainMenuComponent } from './main-menu/main-menu.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TaskComponent,\n    TaskDetailComponent,\n    // MessagesComponent,\n    DashboardComponent,\n    PaginationComponent,\n    MainMenuComponent\n  ],\n  imports: [\n    BrowserModule,\n    NotifierModule.withConfig({\n      position: {\n        horizontal: {\n          position: 'right'\n        },\n        vertical: {\n          position: 'top'\n        }\n      },\n      behaviour: {\n        autoHide: 2000\n      }\n      // Custom options in here\n    }),\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    // HttpClientInMemoryWebApiModule.forRoot(InMemoryDataService, {\n    //   dataEncapsulation: false\n    // })\n  ],\n  providers: [],\n  // providers: [{provide: APP_BASE_HREF, useValue : '/' }]\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { NotifierService } from 'angular-notifier';\nimport { Task } from '../task';\nimport { Page } from '../page';\nimport { TaskService } from '../task.service';\n// import { TASKS } from '../mock-tasks'; // remove on prod\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n  tasks: Task[] = [];\n  // tasks: Task[] = TASKS;\n  selectedTask: Task;\n  pageData: Page;\n  sortKey = 'title';\n  sortWay = 'inc';\n  page = 1;\n  countConfirmed = 0;\n\n  private readonly notifier: NotifierService;\n\n  constructor(private taskService: TaskService, notifierService: NotifierService) { this.notifier = notifierService; }\n\n  ngOnInit(): void {\n    this.getTasks();\n  }\n\n  getTasks(): void {\n    const params = {\n      page: this.page,\n      sortKey: this.sortKey,\n      sortWay: this.sortWay,\n      onMain: true,\n    };\n\n    this.taskService.getTasks(params).subscribe((data) => {\n      console.log(data);\n      this.tasks = data.results;\n      this.pageData = data;\n      this.calcConfirmed();\n    });\n  }\n\n  calcConfirmed() {\n    this.countConfirmed = 0;\n    for (const task of this.tasks) {\n      if (task.isCofirmed) {\n        this.countConfirmed += 1;\n      }\n    }\n  }\n\n  save(task: Task): void {\n    if (task.isCofirmed) {\n      task.isCofirmed = false;\n    } else {\n      task.isCofirmed = true;\n    }\n\n    this.taskService.updateTask(task).subscribe(data => {\n      console.log(data);\n      // notify\n      this.notifier.notify('success', 'Задача успешно обновлена!');\n      this.calcConfirmed();\n    });\n  }\n\n  onSelect(task: Task): void {\n    this.selectedTask = task;\n    // this.messageService.add(`TaskService: Selected task id=${task.id}`);\n  }\n\n  onClose(): void {\n    this.selectedTask = null;\n  }\n}\n","<section>\n\t<h2 class=\"blockTitle\">Основные задачи</h2>\n\t<div *ngIf=\"tasks.length; then thenBlock else elseBlock\"></div>\n\t<nav class=\"taskInfo\" *ngIf=\"tasks.length;\">Выполнено: {{countConfirmed}}/{{tasks.length}}</nav>\n\t<ng-template #thenBlock>\n\t\t<div class=\"task\" *ngFor=\"let task of tasks\" [class.task-confirmed]=\"task.isCofirmed\">\n\t\t\t<div class=\"taskValue taskState\">\n\t\t\t\t<label class=\"legend\" for=\"isCofirmed{{task.id}}\">\n\t\t\t\t\t<input id=\"isCofirmed{{task.id}}\" type=\"checkbox\" class=\"legend__switcher\"\n\t\t\t\t\t\t[checked]=\"task.isCofirmed\" name=\"isCofirmed{{task.id}}\" (change)=\"save(task)\">\n\t\t\t\t\t<svg class=\"legend__icon\" xmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\txmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 125\"\n\t\t\t\t\t\tenable-background=\"new 0 0 100 100\" xml:space=\"preserve\">\n\t\t\t\t\t\t<g>\n\t\t\t\t\t\t\t<path class=\"legend__icon_box\"\n\t\t\t\t\t\t\t\td=\"M67.624,72.538c-2.295-11.419-4.692-24.843-2.153-36.414c0.107-0.49,0.051-0.926-0.111-1.293   c-0.243-0.738-0.866-1.327-1.881-1.32c-12.609,0.119-25.143,1.758-37.752,1.875c-2.294,0.022-2.608,3.081-0.95,3.914   c-0.02,0.119-0.034,0.238-0.034,0.37c0,0-0.192,23.523,2.231,35.075c0,0,0.005,0.015,0.007,0.024   c-0.222,0.963,0.168,1.986,1.432,2.182c10.363,1.617,20.406-1.573,30.752-1.803c2.659-0.059,2.664-4.187,0-4.127   c-9.452,0.207-18.875,3.189-28.319,2.117c-2.211-10.998-1.973-22.651-1.978-33.469c0-0.081-0.015-0.151-0.024-0.227   c10.735-0.297,21.417-1.488,32.15-1.746c-1.863,11.68,0.366,24.572,2.651,35.934C64.17,76.245,68.146,75.137,67.624,72.538z\" />\n\t\t\t\t\t\t\t<path class=\"legend__icon_check\"\n\t\t\t\t\t\t\t\td=\"M21.444,51.573c6.405,6.409,12.812,12.809,19.217,19.214c1.751,1.754,4.596,1.275,5.877-0.755   c9.353-14.826,19.448-29.436,32.601-41.167c3.608-3.217-1.703-8.49-5.289-5.29c-13.596,12.127-24.106,27.36-33.775,42.683   c1.961-0.254,3.919-0.507,5.877-0.76c-6.405-6.405-12.812-12.807-19.215-19.214C23.324,42.869,18.034,48.159,21.444,51.573   L21.444,51.573z\" />\n\t\t\t\t\t\t</g><text x=\"0\" y=\"115\" fill=\"#000000\" font-size=\"5px\" font-weight=\"bold\"\n\t\t\t\t\t\t\tfont-family=\"'Helvetica Neue', Helvetica, Arial-Unicode, Arial, Sans-serif\">Created by Alice\n\t\t\t\t\t\t\tMortaro</text><text x=\"0\" y=\"120\" fill=\"#000000\" font-size=\"5px\" font-weight=\"bold\"\n\t\t\t\t\t\t\tfont-family=\"'Helvetica Neue', Helvetica, Arial-Unicode, Arial, Sans-serif\">from the Noun\n\t\t\t\t\t\t\tProject</text>\n\t\t\t\t\t</svg>\n\t\t\t\t\t<span class=\"legend__text\"></span>\n\t\t\t\t</label>\n\n\t\t\t</div>\n\t\t\t<span class=\"taskValue taskTitle\">{{ task.title }}</span>\n\t\t\t<div class=\"taskValue taskControl\">\n\t\t\t\t<button type=\"button\" class=\"taskDetails\" (click)=\"onSelect(task)\">-></button>\n\t\t\t\t<!-- <a type=\"button\" class=\"taskDetails\" routerLink=\"/detail/{{ task.id }}\">-></a> -->\n\t\t\t</div>\n\t\t</div>\n\t</ng-template>\n\t<ng-template #elseBlock>\n\t\t<div class=\"task task-empty\">\n\t\t\tСписок задач пуст\n\t\t</div>\n\t</ng-template>\n</section>\n\n<!-- commint on link -->\n<app-task-detail [task]=\"selectedTask\" (taskChange)=\"onClose()\"></app-task-detail>\n<notifier-container></notifier-container>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main-menu',\n  templateUrl: './main-menu.component.html',\n  styleUrls: ['./main-menu.component.scss']\n})\nexport class MainMenuComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"menu mainMenu\">\n    <div class=\"menu__item menuBrand\">\n        <a routerLink=\"/\" class=\"menuItem__content\" title=\"Главная\">\n            <i class=\"fas fa-home\"></i>\n        </a>\n    </div>\n    <div class=\"menu__item\">\n        <a routerLink=\"/tasklist\" class=\"menuItem__content\">Задачи</a>\n    </div>\n</nav>","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n  messages: string[] = [];\n\n  add(message: string) {\n    this.messages.push(message);\n  }\n\n  clear() {\n    this.messages = [];\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-pagination',\n  templateUrl: './pagination.component.html',\n  styleUrls: ['./pagination.component.scss']\n})\nexport class PaginationComponent implements OnInit {\n  @Input() pageInfo: any;\n  @Output() pageChange: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  setPage(page) {\n    this.pageInfo.page = page;\n    this.pageChange.emit(this.pageInfo.page);\n  }\n}\n","<nav class=\"pagination\" *ngIf=\"pageInfo.prev || pageInfo.next\">\n    <div class=\"pagination__item\" *ngIf=\"pageInfo.prev\">\n        <button class=\"paginationContent\" (click)=\"setPage(pageInfo.prev)\" title=\"Предыдущая страница\">prev</button>\n    </div>\n    <div class=\"pagination__item\">\n        <span class=\"paginationContent\">{{ pageInfo.page }}</span>\n    </div>\n    <div class=\"pagination__item\" *ngIf=\"pageInfo.next\">\n        <button class=\"paginationContent\" (click)=\"setPage(pageInfo.next)\" title=\"Следущая страница\">next</button>\n    </div>\n</nav>","import { HostListener, Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { NotifierService } from 'angular-notifier';\n\n// for work with link\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\n\nimport { Task } from '../task';\nimport { TaskService } from '../task.service';\n\n@Component({\n  selector: 'app-task-detail',\n  templateUrl: './task-detail.component.html',\n  styleUrls: ['./task-detail.component.scss'],\n})\nexport class TaskDetailComponent implements OnInit {\n\n  constructor(\n    private route: ActivatedRoute,\n    private taskService: TaskService,\n    private location: Location,\n    notifierService: NotifierService\n  ) { this.notifier = notifierService; }\n\n  @Input() task: Task;\n  @Output() taskChange: EventEmitter<any> = new EventEmitter<any>();\n\n  private readonly notifier: NotifierService;\n  @HostListener('window:keydown', ['$event'])\n  handleKeyDown(event: KeyboardEvent) {\n    if (event.key === 'Escape') {\n      this.onClose();\n    }\n  }\n\n  ngOnInit(): void { }\n\n  onClose(): void {\n    this.task = null;\n    this.taskChange.emit(this.task);\n  }\n\n  save(task: Task): void {\n    if (!task.title || !task.user || !task.email) {\n      this.notifier.notify('warning', 'Поля \\'Имя задачи\\', \\'ФИО\\' и \\'Email\\' не должны быть пустыми!');\n      return;\n    }\n    this.taskService.updateTask(this.task).subscribe(data => {\n      console.log(data);\n      // notify\n      this.notifier.notify('success', 'Задача успешно обновлена!');\n    });\n  }\n}\n","<form class=\"taskForm\" state=\"visible\" *ngIf=\"task\">\n    <h2 class=\"taskTitle\">Редактирование</h2>\n    <input type=\"hidden\" name=id value=\"{{ task.id }}\" required>\n    <input type=\"text\" name=\"title\" placeholder=\"Имя задачи\" class=\"inputField\" [(ngModel)]=\"task.title\">\n    <textarea type=\"text\" name=\"description\" placeholder=\"Описание\" class=\"inputField\"\n        [(ngModel)]=\"task.description\"></textarea>\n    <input type=\"text\" name=\"user\" placeholder=\"ФИО\" class=\"inputField\" [(ngModel)]=\"task.user\">\n    <input type=\"email\" name=\"email\" placeholder=\"Email\" class=\"inputField\" [(ngModel)]=\"task.email\">\n\n\n\n    <label class=\"legend\" for=\"editStatus\">\n        <input id=\"editStatus\" type=\"checkbox\" class=\"legend__switcher\" [(ngModel)]=\"task.isCofirmed\" name=\"isCofirmed\">\n        <svg class=\"legend__icon\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n            version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 125\" enable-background=\"new 0 0 100 100\"\n            xml:space=\"preserve\">\n            <g>\n                <path class=\"legend__icon_box\"\n                    d=\"M67.624,72.538c-2.295-11.419-4.692-24.843-2.153-36.414c0.107-0.49,0.051-0.926-0.111-1.293   c-0.243-0.738-0.866-1.327-1.881-1.32c-12.609,0.119-25.143,1.758-37.752,1.875c-2.294,0.022-2.608,3.081-0.95,3.914   c-0.02,0.119-0.034,0.238-0.034,0.37c0,0-0.192,23.523,2.231,35.075c0,0,0.005,0.015,0.007,0.024   c-0.222,0.963,0.168,1.986,1.432,2.182c10.363,1.617,20.406-1.573,30.752-1.803c2.659-0.059,2.664-4.187,0-4.127   c-9.452,0.207-18.875,3.189-28.319,2.117c-2.211-10.998-1.973-22.651-1.978-33.469c0-0.081-0.015-0.151-0.024-0.227   c10.735-0.297,21.417-1.488,32.15-1.746c-1.863,11.68,0.366,24.572,2.651,35.934C64.17,76.245,68.146,75.137,67.624,72.538z\" />\n                <path class=\"legend__icon_check\"\n                    d=\"M21.444,51.573c6.405,6.409,12.812,12.809,19.217,19.214c1.751,1.754,4.596,1.275,5.877-0.755   c9.353-14.826,19.448-29.436,32.601-41.167c3.608-3.217-1.703-8.49-5.289-5.29c-13.596,12.127-24.106,27.36-33.775,42.683   c1.961-0.254,3.919-0.507,5.877-0.76c-6.405-6.405-12.812-12.807-19.215-19.214C23.324,42.869,18.034,48.159,21.444,51.573   L21.444,51.573z\" />\n            </g><text x=\"0\" y=\"115\" fill=\"#000000\" font-size=\"5px\" font-weight=\"bold\"\n                font-family=\"'Helvetica Neue', Helvetica, Arial-Unicode, Arial, Sans-serif\">Created by Alice\n                Mortaro</text><text x=\"0\" y=\"120\" fill=\"#000000\" font-size=\"5px\" font-weight=\"bold\"\n                font-family=\"'Helvetica Neue', Helvetica, Arial-Unicode, Arial, Sans-serif\">from the Noun Project</text>\n        </svg>\n        <span class=\"legend__text\">выполнена</span>\n    </label>\n\n    <label class=\"legend\" for=\"editOnMain\">\n        <input id=\"editOnMain\" type=\"checkbox\" class=\"legend__switcher\" [(ngModel)]=\"task.onMain\" name=\"onMain\">\n        <svg class=\"legend__icon\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n            version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 125\" enable-background=\"new 0 0 100 100\"\n            xml:space=\"preserve\">\n            <g>\n                <path class=\"legend__icon_box\"\n                    d=\"M67.624,72.538c-2.295-11.419-4.692-24.843-2.153-36.414c0.107-0.49,0.051-0.926-0.111-1.293   c-0.243-0.738-0.866-1.327-1.881-1.32c-12.609,0.119-25.143,1.758-37.752,1.875c-2.294,0.022-2.608,3.081-0.95,3.914   c-0.02,0.119-0.034,0.238-0.034,0.37c0,0-0.192,23.523,2.231,35.075c0,0,0.005,0.015,0.007,0.024   c-0.222,0.963,0.168,1.986,1.432,2.182c10.363,1.617,20.406-1.573,30.752-1.803c2.659-0.059,2.664-4.187,0-4.127   c-9.452,0.207-18.875,3.189-28.319,2.117c-2.211-10.998-1.973-22.651-1.978-33.469c0-0.081-0.015-0.151-0.024-0.227   c10.735-0.297,21.417-1.488,32.15-1.746c-1.863,11.68,0.366,24.572,2.651,35.934C64.17,76.245,68.146,75.137,67.624,72.538z\" />\n                <path class=\"legend__icon_check\"\n                    d=\"M21.444,51.573c6.405,6.409,12.812,12.809,19.217,19.214c1.751,1.754,4.596,1.275,5.877-0.755   c9.353-14.826,19.448-29.436,32.601-41.167c3.608-3.217-1.703-8.49-5.289-5.29c-13.596,12.127-24.106,27.36-33.775,42.683   c1.961-0.254,3.919-0.507,5.877-0.76c-6.405-6.405-12.812-12.807-19.215-19.214C23.324,42.869,18.034,48.159,21.444,51.573   L21.444,51.573z\" />\n            </g><text x=\"0\" y=\"115\" fill=\"#000000\" font-size=\"5px\" font-weight=\"bold\"\n                font-family=\"'Helvetica Neue', Helvetica, Arial-Unicode, Arial, Sans-serif\">Created by Alice\n                Mortaro</text><text x=\"0\" y=\"120\" fill=\"#000000\" font-size=\"5px\" font-weight=\"bold\"\n                font-family=\"'Helvetica Neue', Helvetica, Arial-Unicode, Arial, Sans-serif\">from the Noun Project</text>\n        </svg>\n        <span class=\"legend__text\">показывать на главной</span>\n    </label>\n    <br>\n\n    <div class=\"btnGroup\">\n        <button type=\"button\" class=\"btn\" (click)=\"onClose()\">Отмена</button>\n        <button type=\"confirm\" class=\"btn btnConfirm\" (click)=\"save(task)\">Принять</button>\n    </div>\n\n    <button type=\"button\" class=\"btn btnClose\" (click)=\"onClose()\" title=\"Закрыть\">\n        <i class=\"fas fa-times\" aria-hidden=\"true\"></i>\n    </button>\n</form>","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { MessageService } from './message.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { HttpParams } from '@angular/common/http';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nimport { Task } from './task';\nimport { Page } from './page';\n// import { TASKS } from './mock-tasks';\n// import { PAGES } from './mock-pages';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n  private taskUrl = 'api/gettasks/';\n  private createURL = 'api/createtask/';\n  private updateURL = 'api/updatetask/';\n  private removeURL = 'api/removetask/';\n\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  constructor(\n    private http: HttpClient,\n    private messageService: MessageService\n  ) { }\n\n  getTasks(params: any | undefined): Observable<Page> {\n    const options = {\n      params: null\n    };\n\n    if (params.onMain) {\n      options.params = new HttpParams()\n        .set('page', params.page).set('sortKey', params.sortKey)\n        .set('sortWay', params.sortWay).set('onMain', params.onMain);\n    } else {\n      options.params = new HttpParams()\n        .set('page', params.page).set('sortKey', params.sortKey)\n        .set('sortWay', params.sortWay).set('taskPerPage', params.taskPerPage);\n    }\n    console.log('options', options);\n    return this.http.get<Page>(this.taskUrl, options);\n    // return of(PAGES);\n  }\n\n  getTask(id: number): Observable<Task> {\n    const url = `${this.taskUrl}/${id}`;\n    // this.messageService.add(`TaskService: fetched task id=${id}`);\n    // return of(TASKS.find(task => task.id === id));\n    return this.http.get<Task>(url);\n  }\n\n  addTask(task: any): Observable<Task> {\n    console.log('before send', task);\n    return this.http.post<Task>(this.createURL, task, this.httpOptions);\n  }\n\n  updateTask(task: Task): Observable<Task> {\n    console.log('before send', task);\n    return this.http.post<Task>(this.updateURL, task, this.httpOptions);\n  }\n\n  deleteTask(data: any): Observable<any> {\n    const id = typeof data.task === 'number' ? data.task : data.task.id;\n    const page = data.page;\n    console.log('delete task:', id);\n    return this.http.post<Task>(this.removeURL, { id, page }, this.httpOptions);\n  }\n\n  // private log(message: string) {\n  //   this.messageService.add(`TaskService: ${message}`);\n  // }\n\n  // private handleError<T>(operation = \"operation\", result?: T) {\n  //   return (error: any): Observable<T> => {\n  //     // TODO: send the error to remote logging infrastructure\n  //     console.error(error); // log to console instead\n\n  //     // TODO: better job of transforming error for user consumption\n  //     this.log(`${operation} failed: ${error.message}`);\n\n  //     // Let the app keep running by returning an empty result.\n  //     return of(result as T);\n  //   };\n  // }\n}\n","import { HostListener, Component, OnInit } from '@angular/core';\nimport { NotifierService } from 'angular-notifier';\n// import { MessageService } from '../message.service';\nimport { TaskService } from '../task.service';\nimport { Task } from '../task';\n// import { Page } from '../page';\n// import { TASKS } from '../mock-tasks'; // remove on prod\n\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.scss']\n})\nexport class TaskComponent implements OnInit {\n  tasks: Task[] = [];\n  // tasks: Task[] = TASKS; // remove on prod\n  sortKey = 'title';\n  sortWay = 'inc';\n  page = 1;\n  prev = null;\n  next = null;\n  taskPerPage = 5;\n\n  selectedTask: Task;\n  isInserting = false;\n  isNewConfirmed = false;\n  isNewOnMain = false;\n  descCtrl = false;\n\n  private readonly notifier: NotifierService;\n\n  // for createform\n  @HostListener('window:keydown', ['$event'])\n  handleKeyDown(event: KeyboardEvent) {\n    if (event.key === 'Escape') {\n      this.onClose();\n    }\n  }\n\n  constructor(\n    private taskService: TaskService,\n    notifierService: NotifierService\n    // private messageService: MessageService\n  ) {\n    this.notifier = notifierService;\n  }\n\n  ngOnInit(): void {\n    this.getTasks();\n  }\n\n  getTasks(): void {\n    const params = {\n      page: this.page,\n      sortKey: this.sortKey,\n      sortWay: this.sortWay,\n      taskPerPage: this.taskPerPage,\n    };\n    this.taskService.getTasks(params).subscribe(data => {\n      console.log(data);\n      this.tasks = data.results;\n      this.page = data.page;\n      this.prev = data.prev;\n      this.next = data.next;\n      this.taskPerPage = data.taskPerPage;\n    });\n  }\n\n  delete(task: Task): void {\n    this.tasks = this.tasks.filter(h => h !== task);\n    const sendData = {\n      task,\n      page: this.page,\n    };\n    this.taskService.deleteTask(sendData).subscribe(data => {\n      console.log(data);\n      this.page = data.page;\n      // notify\n      this.notifier.notify('info', 'Задача удалена');\n      this.getTasks();\n    });\n  }\n\n  add(\n    taskTitle: string,\n    taskDescribe: string,\n    taskUser: string,\n    taskEmail: string\n  ): void {\n    console.log(\n      taskTitle,\n      taskDescribe,\n      taskUser,\n      taskEmail,\n      this.isNewConfirmed,\n      this.isNewOnMain\n    );\n    if (!taskTitle || !taskUser || !taskEmail) {\n      this.notifier.notify('warning', 'Поля \\'Имя задачи\\', \\'ФИО\\' и \\'Email\\' не должны быть пустыми!');\n      return;\n    }\n\n    const newtask = {\n      title: taskTitle,\n      description: taskDescribe,\n      user: taskUser,\n      email: taskEmail,\n      isCofirmed: this.isNewConfirmed,\n      onMain: this.isNewOnMain\n    };\n\n    this.isNewConfirmed = false;\n    this.isNewOnMain = false;\n\n    this.taskService.addTask({ newtask } as any).subscribe(task => {\n      // this.tasks.push(task);\n      console.log(task);\n      this.page = 1;\n      this.sortKey = 'pub_date';\n      this.sortWay = 'dec';\n      this.getTasks();\n      // notify\n      this.notifier.notify('success', 'Задача успешно добавлена!');\n    });\n  }\n\n  onSelect(task: Task): void {\n    this.selectedTask = task;\n    // this.messageService.add(`TaskService: Selected task id=${task.id}`);\n  }\n\n  sort(key) {\n    if (key === this.sortKey) {\n      if (this.sortWay === 'inc') {\n        this.sortWay = 'dec';\n      } else {\n        this.sortWay = 'inc';\n      }\n    } else {\n      this.sortKey = key;\n      this.sortWay = 'inc';\n    }\n    this.page = 1;\n    this.getTasks();\n  }\n\n  setPage(page) {\n    this.page = page;\n    this.getTasks();\n  }\n\n  onInsert(): void {\n    this.isInserting = true;\n  }\n\n  onClose(): void {\n    this.isInserting = false;\n    this.selectedTask = null;\n  }\n}\n","<div class=\"blockTitle\">\n    <h2 class=\"\">Список задач <button class=\"createBtn\" (click)=\"onInsert()\" title=\"Создать задачу\">\n            <i class=\"fas fa-plus\"></i>\n        </button>\n\n    </h2>\n    <div>\n        <label class=\"legend \" for=\"descCtrl\">\n            <input id=\"descCtrl\" type=\"checkbox\" class=\"legend__switcher\" [(ngModel)]=\"descCtrl\" name=\"newConfirmed\">\n            <svg class=\"legend__icon\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n                version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 125\" enable-background=\"new 0 0 100 100\"\n                xml:space=\"preserve\">\n                <g>\n                    <path class=\"legend__icon_box\"\n                        d=\"M67.624,72.538c-2.295-11.419-4.692-24.843-2.153-36.414c0.107-0.49,0.051-0.926-0.111-1.293   c-0.243-0.738-0.866-1.327-1.881-1.32c-12.609,0.119-25.143,1.758-37.752,1.875c-2.294,0.022-2.608,3.081-0.95,3.914   c-0.02,0.119-0.034,0.238-0.034,0.37c0,0-0.192,23.523,2.231,35.075c0,0,0.005,0.015,0.007,0.024   c-0.222,0.963,0.168,1.986,1.432,2.182c10.363,1.617,20.406-1.573,30.752-1.803c2.659-0.059,2.664-4.187,0-4.127   c-9.452,0.207-18.875,3.189-28.319,2.117c-2.211-10.998-1.973-22.651-1.978-33.469c0-0.081-0.015-0.151-0.024-0.227   c10.735-0.297,21.417-1.488,32.15-1.746c-1.863,11.68,0.366,24.572,2.651,35.934C64.17,76.245,68.146,75.137,67.624,72.538z\" />\n                    <path class=\"legend__icon_check\"\n                        d=\"M21.444,51.573c6.405,6.409,12.812,12.809,19.217,19.214c1.751,1.754,4.596,1.275,5.877-0.755   c9.353-14.826,19.448-29.436,32.601-41.167c3.608-3.217-1.703-8.49-5.289-5.29c-13.596,12.127-24.106,27.36-33.775,42.683   c1.961-0.254,3.919-0.507,5.877-0.76c-6.405-6.405-12.812-12.807-19.215-19.214C23.324,42.869,18.034,48.159,21.444,51.573   L21.444,51.573z\" />\n                </g><text x=\"0\" y=\"115\" fill=\"#000000\" font-size=\"5px\" font-weight=\"bold\"\n                    font-family=\"'Helvetica Neue', Helvetica, Arial-Unicode, Arial, Sans-serif\">Created by Alice\n                    Mortaro</text><text x=\"0\" y=\"120\" fill=\"#000000\" font-size=\"5px\" font-weight=\"bold\"\n                    font-family=\"'Helvetica Neue', Helvetica, Arial-Unicode, Arial, Sans-serif\">from the Noun\n                    Project</text>\n            </svg>\n            <span class=\"legend__text\">Показывать описание задач</span>\n        </label>\n    </div>\n</div>\n\n\n<nav class=\"menu taskMenu\">\n    <!-- <div class=\"menu__item\">\n        <button (click)=\"sort('status')\" class=\"menuBtn sortBtn\" title=\"Сортировка по статусу\">\n            <i class=\"fas fa-sort\" aria-hidden=\"true\"></i>Статус</button>\n    </div> -->\n    <div class=\"menu__item taskTitle\">\n        <button (click)=\"sort('title')\" class=\"menuBtn sortBtn\" title=\"Сортировка по заголовку\">\n            <i class=\"fas fa-sort\" aria-hidden=\"true\"></i>Заголовок</button>\n    </div>\n    <div class=\"menu__item taskUser\">\n        <button (click)=\"sort('user')\" class=\"menuBtn sortBtn\" title=\"Сортировка по имени\">\n            <i class=\"fas fa-sort\" aria-hidden=\"true\"></i>Имя</button>\n    </div>\n    <div class=\"menu__item taskEmail\">\n        <button (click)=\"sort('email')\" class=\"menuBtn sortBtn\" title=\"Сортировка по почте\">\n            <i class=\"fas fa-sort\" aria-hidden=\"true\"></i>Email</button>\n    </div>\n    <div class=\"menu__item taskDate\">\n        <button (click)=\"sort('pub_date')\" class=\"menuBtn sortBtn\" title=\"Сортировка по дате\">\n            <i class=\"fas fa-sort\" aria-hidden=\"true\"></i>Дата</button>\n    </div>\n    <div class=\"menu__item pageCtrlBox\">\n        <div class=\"pageCtrl\">\n            <input id=\"taskPerPage\" name=\"taskPerPage\" type=\"number\" min=\"5\" max=\"50\"\n                class=\"input-number pageCtrl__item\" [(ngModel)]=\"taskPerPage\">\n            <button type=\"button\" class=\"btn pageCtrl__item\" (click)=\"getTasks()\">ок</button>\n        </div>\n    </div>\n</nav>\n\n<div class=\"taskList\" *ngIf=\"tasks.length; then thenBlock else elseBlock\"></div>\n\n<ng-template #thenBlock>\n    <div class=\"task\" *ngFor=\"let task of tasks\" [class.task-opened]=\"descCtrl\"\n        [class.task-confirmed]=\"task.isCofirmed\">\n        <div class=\"taskHeader\">\n            <span class=\"taskHeader__item taskTitle\">{{ task.title }}</span>\n            <span class=\"taskHeader__item taskUser\">{{ task.user }}</span>\n            <span class=\"taskHeader__item taskEmail\">{{ task.email }}</span>\n            <span class=\"taskHeader__item taskDate\">{{ task.pub_date }}</span>\n\n            <div class=\"taskHeader__item btnGroup taskDate\">\n                <button type=\"button\" class=\"btn taskEdit\" (click)=\"onSelect(task)\" title=\"Изменить\">\n                    <i class=\"far fa-edit\" aria-hidden=\"true\"></i>\n                </button>\n                <button (click)=\"delete(task)\" type=\"button\" class=\"btn taskRemove\" title=\"Удалить\">\n                    <i class=\"far fa-trash-alt\" aria-hidden=\"true\"></i>\n                </button>\n            </div>\n        </div>\n        <div class=\"taskBody\" *ngIf=\"task.description\">\n            <div>{{ task.description }}</div>\n        </div>\n    </div>\n</ng-template>\n\n<ng-template #elseBlock>\n    <div class=\"task task-empty\">\n        Список задач пуст\n    </div>\n</ng-template>\n\n<!-- commint on link -->\n<app-task-detail [task]=\"selectedTask\" (taskChange)=\"onClose()\"></app-task-detail>\n<app-pagination [pageInfo]=\"{page: page, prev:prev, next:next}\" (pageChange)=\"setPage($event)\"></app-pagination>\n<notifier-container></notifier-container>\n\n<form class=\"taskForm\" state=\"visible\" *ngIf=\"isInserting\">\n    <h2 class=\"taskTitle\">Добавление задачи</h2>\n    <input type=\"text\" name=\"title\" placeholder=\"Имя задачи\" class=\"inputField\" #taskTitle required>\n    <textarea type=\"text\" name=\"description\" placeholder=\"Описание\" class=\"inputField\" #taskDescribe></textarea>\n    <input type=\"text\" name=\"user\" placeholder=\"ФИО\" class=\"inputField\" #taskUser>\n    <input type=\"email\" name=\"email\" placeholder=\"Email\" class=\"inputField\" #taskEmail>\n\n    <label class=\"legend\" for=\"newConfirmed\">\n        <input id=\"newConfirmed\" type=\"checkbox\" class=\"legend__switcher\" [(ngModel)]=\"isNewConfirmed\"\n            name=\"newConfirmed\">\n        <svg class=\"legend__icon\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n            version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 125\" enable-background=\"new 0 0 100 100\"\n            xml:space=\"preserve\">\n            <g>\n                <path class=\"legend__icon_box\"\n                    d=\"M67.624,72.538c-2.295-11.419-4.692-24.843-2.153-36.414c0.107-0.49,0.051-0.926-0.111-1.293   c-0.243-0.738-0.866-1.327-1.881-1.32c-12.609,0.119-25.143,1.758-37.752,1.875c-2.294,0.022-2.608,3.081-0.95,3.914   c-0.02,0.119-0.034,0.238-0.034,0.37c0,0-0.192,23.523,2.231,35.075c0,0,0.005,0.015,0.007,0.024   c-0.222,0.963,0.168,1.986,1.432,2.182c10.363,1.617,20.406-1.573,30.752-1.803c2.659-0.059,2.664-4.187,0-4.127   c-9.452,0.207-18.875,3.189-28.319,2.117c-2.211-10.998-1.973-22.651-1.978-33.469c0-0.081-0.015-0.151-0.024-0.227   c10.735-0.297,21.417-1.488,32.15-1.746c-1.863,11.68,0.366,24.572,2.651,35.934C64.17,76.245,68.146,75.137,67.624,72.538z\" />\n                <path class=\"legend__icon_check\"\n                    d=\"M21.444,51.573c6.405,6.409,12.812,12.809,19.217,19.214c1.751,1.754,4.596,1.275,5.877-0.755   c9.353-14.826,19.448-29.436,32.601-41.167c3.608-3.217-1.703-8.49-5.289-5.29c-13.596,12.127-24.106,27.36-33.775,42.683   c1.961-0.254,3.919-0.507,5.877-0.76c-6.405-6.405-12.812-12.807-19.215-19.214C23.324,42.869,18.034,48.159,21.444,51.573   L21.444,51.573z\" />\n            </g><text x=\"0\" y=\"115\" fill=\"#000000\" font-size=\"5px\" font-weight=\"bold\"\n                font-family=\"'Helvetica Neue', Helvetica, Arial-Unicode, Arial, Sans-serif\">Created by Alice\n                Mortaro</text><text x=\"0\" y=\"120\" fill=\"#000000\" font-size=\"5px\" font-weight=\"bold\"\n                font-family=\"'Helvetica Neue', Helvetica, Arial-Unicode, Arial, Sans-serif\">from the Noun Project</text>\n        </svg>\n        <span class=\"legend__text\">выполнена</span>\n    </label>\n\n    <label class=\"legend\" for=\"newOnMain\">\n        <input id=\"newOnMain\" type=\"checkbox\" class=\"legend__switcher\" [(ngModel)]=\"isNewOnMain\" name=\"newOnMain\">\n        <svg class=\"legend__icon\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n            version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 125\" enable-background=\"new 0 0 100 100\"\n            xml:space=\"preserve\">\n            <g>\n                <path class=\"legend__icon_box\"\n                    d=\"M67.624,72.538c-2.295-11.419-4.692-24.843-2.153-36.414c0.107-0.49,0.051-0.926-0.111-1.293   c-0.243-0.738-0.866-1.327-1.881-1.32c-12.609,0.119-25.143,1.758-37.752,1.875c-2.294,0.022-2.608,3.081-0.95,3.914   c-0.02,0.119-0.034,0.238-0.034,0.37c0,0-0.192,23.523,2.231,35.075c0,0,0.005,0.015,0.007,0.024   c-0.222,0.963,0.168,1.986,1.432,2.182c10.363,1.617,20.406-1.573,30.752-1.803c2.659-0.059,2.664-4.187,0-4.127   c-9.452,0.207-18.875,3.189-28.319,2.117c-2.211-10.998-1.973-22.651-1.978-33.469c0-0.081-0.015-0.151-0.024-0.227   c10.735-0.297,21.417-1.488,32.15-1.746c-1.863,11.68,0.366,24.572,2.651,35.934C64.17,76.245,68.146,75.137,67.624,72.538z\" />\n                <path class=\"legend__icon_check\"\n                    d=\"M21.444,51.573c6.405,6.409,12.812,12.809,19.217,19.214c1.751,1.754,4.596,1.275,5.877-0.755   c9.353-14.826,19.448-29.436,32.601-41.167c3.608-3.217-1.703-8.49-5.289-5.29c-13.596,12.127-24.106,27.36-33.775,42.683   c1.961-0.254,3.919-0.507,5.877-0.76c-6.405-6.405-12.812-12.807-19.215-19.214C23.324,42.869,18.034,48.159,21.444,51.573   L21.444,51.573z\" />\n            </g><text x=\"0\" y=\"115\" fill=\"#000000\" font-size=\"5px\" font-weight=\"bold\"\n                font-family=\"'Helvetica Neue', Helvetica, Arial-Unicode, Arial, Sans-serif\">Created by Alice\n                Mortaro</text><text x=\"0\" y=\"120\" fill=\"#000000\" font-size=\"5px\" font-weight=\"bold\"\n                font-family=\"'Helvetica Neue', Helvetica, Arial-Unicode, Arial, Sans-serif\">from the Noun Project</text>\n        </svg>\n        <span class=\"legend__text\">показывать на главной</span>\n    </label>\n    <br>\n\n    <div class=\"btnGroup\">\n        <button type=\"button\" class=\"btn\" (click)=\"onClose()\">Отмена</button>\n        <button type=\"confirm\" class=\"btn btnConfirm\"\n            (click)=\"add(taskTitle.value, taskDescribe.value, taskUser.value, taskEmail.value); taskTitle.value=''; taskDescribe.value=''; taskUser.value=''; taskEmail.value=''\">Создать</button>\n    </div>\n\n    <button type=\"button\" class=\"btn btnClose\" (click)=\"onClose()\" title=\"Закрыть\">\n        <i class=\"fas fa-times\" aria-hidden=\"true\"></i>\n    </button>\n</form>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}