{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/message.service.ts","./src/app/task-detail/task-detail.component.ts","./src/app/task-detail/task-detail.component.html","./src/app/task.service.ts","./src/app/task/task.component.ts","./src/app/task/task.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TaskComponent } from './task/task.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { TaskDetailComponent } from './task-detail/task-detail.component';\n\nconst routes: Routes = [\n\t{ path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n\t{ path: 'dashboard', component: DashboardComponent },\n\t{ path: 'tasklist', component: TaskComponent },\n\t{ path: 'detail/:id', component: TaskDetailComponent },\n];\n\n@NgModule({\n\timports: [RouterModule.forRoot(routes)],\n\texports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n// import { HostListener, Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Менеджер задач';\n}\n","<header>\n\t<nav class=\"menu mainMenu\">\n\t\t<!-- <div class=\"menu__item menuBrand\">\n\t    \t<a routerLink=\"/\" class=\"menuItem__content\">\n\t    \t\t<i class=\"fas fa-home\"></i>\n\t    \t</a>\n\t    </div> -->\n\t\t<div class=\"menu__item\">\n\t\t\t<a routerLink=\"/dashboard\" class=\"menuItem__content\">Главная</a>\n\t\t</div>\n\t\t<div class=\"menu__item\">\n\t\t\t<a routerLink=\"/tasklist\" class=\"menuItem__content\">Задачи</a>\n\t\t</div>\n\t</nav>\n</header>\n\n<main>\n\t<h1 class=\"pageTitle\">{{ title }}</h1>\n\t<router-outlet></router-outlet>\n</main>\n\n<!-- <app-messages></app-messages> -->","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NotifierModule } from 'angular-notifier';\n// import { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\n// import { InMemoryDataService } from './in-memory-data.service';\n\nimport { AppComponent } from './app.component';\nimport { TaskComponent } from './task/task.component';\nimport { TaskDetailComponent } from './task-detail/task-detail.component';\n// import { MessagesComponent } from './messages/messages.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TaskComponent,\n    TaskDetailComponent,\n    // MessagesComponent,\n    DashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    NotifierModule.withConfig({\n      position: {\n        horizontal: {\n          position: 'right'\n        },\n        vertical: {\n          position: 'top'\n        }\n      },\n      behaviour: {\n        autoHide: 2000\n      }\n      // Custom options in here\n    }),\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    // HttpClientInMemoryWebApiModule.forRoot(InMemoryDataService, {\n    //   dataEncapsulation: false\n    // })\n  ],\n  providers: [],\n  // providers: [{provide: APP_BASE_HREF, useValue : '/' }]\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { NotifierService } from 'angular-notifier';\nimport { Task } from '../task';\nimport { Page } from '../page';\nimport { TaskService } from '../task.service';\n// import { TASKS } from '../mock-tasks'; // remove on prod\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n  tasks: Task[] = [];\n  // tasks: Task[] = TASKS;\n  selectedTask: Task;\n  pageData: Page;\n  sortKey = 'title';\n  sortWay = 'inc';\n  page = 1;\n  countConfirmed = 0;\n\n  private readonly notifier: NotifierService;\n\n  constructor(private taskService: TaskService, notifierService: NotifierService) { this.notifier = notifierService; }\n\n  ngOnInit(): void {\n    this.getTasks();\n  }\n\n  getTasks(): void {\n    const params = {\n      page: this.page,\n      sortKey: this.sortKey,\n      sortWay: this.sortWay,\n      onMain: true,\n    };\n\n    this.taskService.getTasks(params).subscribe((data) => {\n      console.log(data);\n      this.tasks = data.results;\n      this.pageData = data;\n      this.calcConfirmed();\n    });\n  }\n\n  calcConfirmed() {\n    this.countConfirmed = 0;\n    for (const task of this.tasks) {\n      if (task.isCofirmed) {\n        this.countConfirmed += 1;\n      }\n    }\n  }\n\n  save(task: Task): void {\n    if (task.isCofirmed) {\n      task.isCofirmed = false;\n    } else {\n      task.isCofirmed = true;\n    }\n\n    this.taskService.updateTask(task).subscribe(data => {\n      console.log(data);\n      // notify\n      this.notifier.notify('success', 'Задача успешно обновлена!');\n      this.calcConfirmed();\n    });\n  }\n\n  onSelect(task: Task): void {\n    this.selectedTask = task;\n    // this.messageService.add(`TaskService: Selected task id=${task.id}`);\n  }\n\n  onClose(): void {\n    this.selectedTask = null;\n  }\n}\n","<section>\n\t<h2>Основные задачи</h2>\n\t<div *ngIf=\"tasks.length; then thenBlock else elseBlock\"></div>\n\t<nav class=\"taskInfo\" *ngIf=\"tasks.length;\">Выполнено: {{countConfirmed}}/{{tasks.length}}</nav>\n\t<ng-template #thenBlock>\n\t\t<div class=\"task\" *ngFor=\"let task of tasks\" [class.task-confirmed]=\"task.isCofirmed\">\n\t\t\t<div class=\"taskValue taskState\">\n\t\t\t\t<label class=\"legend\" for=\"isCofirmed{{task.id}}\">\n\t\t\t\t\t<input id=\"isCofirmed{{task.id}}\" type=\"checkbox\" class=\"legend__switcher\"\n\t\t\t\t\t\t[checked]=\"task.isCofirmed\" name=\"isCofirmed{{task.id}}\" (change)=\"save(task)\">\n\t\t\t\t\t<svg class=\"legend__icon\" xmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\txmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 125\"\n\t\t\t\t\t\tenable-background=\"new 0 0 100 100\" xml:space=\"preserve\">\n\t\t\t\t\t\t<g>\n\t\t\t\t\t\t\t<path class=\"legend__icon_box\"\n\t\t\t\t\t\t\t\td=\"M67.624,72.538c-2.295-11.419-4.692-24.843-2.153-36.414c0.107-0.49,0.051-0.926-0.111-1.293   c-0.243-0.738-0.866-1.327-1.881-1.32c-12.609,0.119-25.143,1.758-37.752,1.875c-2.294,0.022-2.608,3.081-0.95,3.914   c-0.02,0.119-0.034,0.238-0.034,0.37c0,0-0.192,23.523,2.231,35.075c0,0,0.005,0.015,0.007,0.024   c-0.222,0.963,0.168,1.986,1.432,2.182c10.363,1.617,20.406-1.573,30.752-1.803c2.659-0.059,2.664-4.187,0-4.127   c-9.452,0.207-18.875,3.189-28.319,2.117c-2.211-10.998-1.973-22.651-1.978-33.469c0-0.081-0.015-0.151-0.024-0.227   c10.735-0.297,21.417-1.488,32.15-1.746c-1.863,11.68,0.366,24.572,2.651,35.934C64.17,76.245,68.146,75.137,67.624,72.538z\" />\n\t\t\t\t\t\t\t<path class=\"legend__icon_check\"\n\t\t\t\t\t\t\t\td=\"M21.444,51.573c6.405,6.409,12.812,12.809,19.217,19.214c1.751,1.754,4.596,1.275,5.877-0.755   c9.353-14.826,19.448-29.436,32.601-41.167c3.608-3.217-1.703-8.49-5.289-5.29c-13.596,12.127-24.106,27.36-33.775,42.683   c1.961-0.254,3.919-0.507,5.877-0.76c-6.405-6.405-12.812-12.807-19.215-19.214C23.324,42.869,18.034,48.159,21.444,51.573   L21.444,51.573z\" />\n\t\t\t\t\t\t</g><text x=\"0\" y=\"115\" fill=\"#000000\" font-size=\"5px\" font-weight=\"bold\"\n\t\t\t\t\t\t\tfont-family=\"'Helvetica Neue', Helvetica, Arial-Unicode, Arial, Sans-serif\">Created by Alice\n\t\t\t\t\t\t\tMortaro</text><text x=\"0\" y=\"120\" fill=\"#000000\" font-size=\"5px\" font-weight=\"bold\"\n\t\t\t\t\t\t\tfont-family=\"'Helvetica Neue', Helvetica, Arial-Unicode, Arial, Sans-serif\">from the Noun\n\t\t\t\t\t\t\tProject</text>\n\t\t\t\t\t</svg>\n\t\t\t\t\t<span class=\"legend__text\"></span>\n\t\t\t\t</label>\n\n\t\t\t</div>\n\t\t\t<span class=\"taskValue taskTitle\">{{ task.title }}</span>\n\t\t\t<div class=\"taskValue taskControl\">\n\t\t\t\t<button type=\"button\" class=\"taskDetails\" (click)=\"onSelect(task)\">-></button>\n\t\t\t\t<!-- <a type=\"button\" class=\"taskDetails\" routerLink=\"/detail/{{ task.id }}\">-></a> -->\n\t\t\t</div>\n\t\t</div>\n\t</ng-template>\n\t<ng-template #elseBlock>\n\t\t<div class=\"task task-empty\">\n\t\t\tСписок задач пуст\n\t\t</div>\n\t</ng-template>\n</section>\n\n<!-- commint on link -->\n<app-task-detail [task]=\"selectedTask\" (taskChange)=\"onClose()\"></app-task-detail>\n<notifier-container></notifier-container>","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n  messages: string[] = [];\n\n  add(message: string) {\n    this.messages.push(message);\n  }\n\n  clear() {\n    this.messages = [];\n  }\n}\n","import { HostListener, Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { NotifierService } from 'angular-notifier';\n\n// for work with link\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\n\nimport { Task } from '../task';\nimport { TaskService } from '../task.service';\n\n@Component({\n  selector: 'app-task-detail',\n  templateUrl: './task-detail.component.html',\n  styleUrls: ['./task-detail.component.scss'],\n})\nexport class TaskDetailComponent implements OnInit {\n\n  constructor(\n    private route: ActivatedRoute,\n    private taskService: TaskService,\n    private location: Location,\n    notifierService: NotifierService\n  ) { this.notifier = notifierService; }\n\n  @Input() task: Task;\n  @Output() taskChange: EventEmitter<any> = new EventEmitter<any>();\n\n  private readonly notifier: NotifierService;\n  @HostListener('window:keydown', ['$event'])\n  handleKeyDown(event: KeyboardEvent) {\n    if (event.key === 'Escape') {\n      this.onClose();\n    }\n  }\n\n  ngOnInit(): void { }\n\n  onClose(): void {\n    this.task = null;\n    this.taskChange.emit(this.task);\n  }\n\n  save(task: Task): void {\n    if (!task.title || !task.user || !task.email) {\n      this.notifier.notify('warning', 'Поля \\'Имя задачи\\', \\'ФИО\\' и \\'Email\\' не должны быть пустыми!');\n      return;\n    }\n    this.taskService.updateTask(this.task).subscribe(data => {\n      console.log(data);\n      // notify\n      this.notifier.notify('success', 'Задача успешно обновлена!');\n    });\n  }\n}\n","<form class=\"taskForm\" state=\"visible\" *ngIf=\"task\">\n    <h2 class=\"taskTitle\">Редактирование</h2>\n    <input type=\"hidden\" name=id value=\"{{ task.id }}\" required>\n    <input type=\"text\" name=\"title\" placeholder=\"Имя задачи\" class=\"inputField\" [(ngModel)]=\"task.title\">\n    <textarea type=\"text\" name=\"description\" placeholder=\"Описание\" class=\"inputField\"\n        [(ngModel)]=\"task.description\"></textarea>\n    <input type=\"text\" name=\"user\" placeholder=\"ФИО\" class=\"inputField\" [(ngModel)]=\"task.user\">\n    <input type=\"email\" name=\"email\" placeholder=\"Email\" class=\"inputField\" [(ngModel)]=\"task.email\">\n\n\n\n    <label class=\"legend\" for=\"editStatus\">\n        <input id=\"editStatus\" type=\"checkbox\" class=\"legend__switcher\" [(ngModel)]=\"task.isCofirmed\" name=\"isCofirmed\">\n        <svg class=\"legend__icon\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n            version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 125\" enable-background=\"new 0 0 100 100\"\n            xml:space=\"preserve\">\n            <g>\n                <path class=\"legend__icon_box\"\n                    d=\"M67.624,72.538c-2.295-11.419-4.692-24.843-2.153-36.414c0.107-0.49,0.051-0.926-0.111-1.293   c-0.243-0.738-0.866-1.327-1.881-1.32c-12.609,0.119-25.143,1.758-37.752,1.875c-2.294,0.022-2.608,3.081-0.95,3.914   c-0.02,0.119-0.034,0.238-0.034,0.37c0,0-0.192,23.523,2.231,35.075c0,0,0.005,0.015,0.007,0.024   c-0.222,0.963,0.168,1.986,1.432,2.182c10.363,1.617,20.406-1.573,30.752-1.803c2.659-0.059,2.664-4.187,0-4.127   c-9.452,0.207-18.875,3.189-28.319,2.117c-2.211-10.998-1.973-22.651-1.978-33.469c0-0.081-0.015-0.151-0.024-0.227   c10.735-0.297,21.417-1.488,32.15-1.746c-1.863,11.68,0.366,24.572,2.651,35.934C64.17,76.245,68.146,75.137,67.624,72.538z\" />\n                <path class=\"legend__icon_check\"\n                    d=\"M21.444,51.573c6.405,6.409,12.812,12.809,19.217,19.214c1.751,1.754,4.596,1.275,5.877-0.755   c9.353-14.826,19.448-29.436,32.601-41.167c3.608-3.217-1.703-8.49-5.289-5.29c-13.596,12.127-24.106,27.36-33.775,42.683   c1.961-0.254,3.919-0.507,5.877-0.76c-6.405-6.405-12.812-12.807-19.215-19.214C23.324,42.869,18.034,48.159,21.444,51.573   L21.444,51.573z\" />\n            </g><text x=\"0\" y=\"115\" fill=\"#000000\" font-size=\"5px\" font-weight=\"bold\"\n                font-family=\"'Helvetica Neue', Helvetica, Arial-Unicode, Arial, Sans-serif\">Created by Alice\n                Mortaro</text><text x=\"0\" y=\"120\" fill=\"#000000\" font-size=\"5px\" font-weight=\"bold\"\n                font-family=\"'Helvetica Neue', Helvetica, Arial-Unicode, Arial, Sans-serif\">from the Noun Project</text>\n        </svg>\n        <span class=\"legend__text\">выполнена</span>\n    </label>\n\n    <label class=\"legend\" for=\"editOnMain\">\n        <input id=\"editOnMain\" type=\"checkbox\" class=\"legend__switcher\" [(ngModel)]=\"task.onMain\" name=\"onMain\">\n        <svg class=\"legend__icon\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n            version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 125\" enable-background=\"new 0 0 100 100\"\n            xml:space=\"preserve\">\n            <g>\n                <path class=\"legend__icon_box\"\n                    d=\"M67.624,72.538c-2.295-11.419-4.692-24.843-2.153-36.414c0.107-0.49,0.051-0.926-0.111-1.293   c-0.243-0.738-0.866-1.327-1.881-1.32c-12.609,0.119-25.143,1.758-37.752,1.875c-2.294,0.022-2.608,3.081-0.95,3.914   c-0.02,0.119-0.034,0.238-0.034,0.37c0,0-0.192,23.523,2.231,35.075c0,0,0.005,0.015,0.007,0.024   c-0.222,0.963,0.168,1.986,1.432,2.182c10.363,1.617,20.406-1.573,30.752-1.803c2.659-0.059,2.664-4.187,0-4.127   c-9.452,0.207-18.875,3.189-28.319,2.117c-2.211-10.998-1.973-22.651-1.978-33.469c0-0.081-0.015-0.151-0.024-0.227   c10.735-0.297,21.417-1.488,32.15-1.746c-1.863,11.68,0.366,24.572,2.651,35.934C64.17,76.245,68.146,75.137,67.624,72.538z\" />\n                <path class=\"legend__icon_check\"\n                    d=\"M21.444,51.573c6.405,6.409,12.812,12.809,19.217,19.214c1.751,1.754,4.596,1.275,5.877-0.755   c9.353-14.826,19.448-29.436,32.601-41.167c3.608-3.217-1.703-8.49-5.289-5.29c-13.596,12.127-24.106,27.36-33.775,42.683   c1.961-0.254,3.919-0.507,5.877-0.76c-6.405-6.405-12.812-12.807-19.215-19.214C23.324,42.869,18.034,48.159,21.444,51.573   L21.444,51.573z\" />\n            </g><text x=\"0\" y=\"115\" fill=\"#000000\" font-size=\"5px\" font-weight=\"bold\"\n                font-family=\"'Helvetica Neue', Helvetica, Arial-Unicode, Arial, Sans-serif\">Created by Alice\n                Mortaro</text><text x=\"0\" y=\"120\" fill=\"#000000\" font-size=\"5px\" font-weight=\"bold\"\n                font-family=\"'Helvetica Neue', Helvetica, Arial-Unicode, Arial, Sans-serif\">from the Noun Project</text>\n        </svg>\n        <span class=\"legend__text\">показывать на главной</span>\n    </label>\n    <br>\n\n    <div class=\"btnGroup\">\n        <button type=\"button\" class=\"btn\" (click)=\"onClose()\">Отмена</button>\n        <button type=\"confirm\" class=\"btn btnConfirm\" (click)=\"save(task)\">Принять</button>\n    </div>\n\n    <button type=\"button\" class=\"btn btnClose\" (click)=\"onClose()\" title=\"Закрыть\">\n        <i class=\"fas fa-times\" aria-hidden=\"true\"></i>\n    </button>\n</form>","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { MessageService } from './message.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { HttpParams } from '@angular/common/http';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nimport { Task } from './task';\nimport { Page } from './page';\n// import { TASKS } from './mock-tasks';\n// import { PAGES } from './mock-pages';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n  private taskUrl = 'api/gettasks/';\n  private createURL = 'api/createtask/';\n  private updateURL = 'api/updatetask/';\n  private removeURL = 'api/removetask/';\n\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  constructor(\n    private http: HttpClient,\n    private messageService: MessageService\n  ) { }\n\n  getTasks(params: any | undefined): Observable<Page> {\n    const options = {\n      params: null\n    };\n\n    if (params.onMain) {\n      options.params = new HttpParams()\n        .set('page', params.page).set('sortKey', params.sortKey)\n        .set('sortWay', params.sortWay).set('onMain', params.onMain);\n    } else {\n      options.params = new HttpParams()\n        .set('page', params.page).set('sortKey', params.sortKey)\n        .set('sortWay', params.sortWay).set('taskPerPage', params.taskPerPage);\n    }\n    console.log('options', options);\n    return this.http.get<Page>(this.taskUrl, options);\n    // return of(PAGES);\n  }\n\n  getTask(id: number): Observable<Task> {\n    const url = `${this.taskUrl}/${id}`;\n    // this.messageService.add(`TaskService: fetched task id=${id}`);\n    // return of(TASKS.find(task => task.id === id));\n    return this.http.get<Task>(url);\n  }\n\n  addTask(task: any): Observable<Task> {\n    console.log('before send', task);\n    return this.http.post<Task>(this.createURL, task, this.httpOptions);\n  }\n\n  updateTask(task: Task): Observable<Task> {\n    console.log('before send', task);\n    return this.http.post<Task>(this.updateURL, task, this.httpOptions);\n  }\n\n  deleteTask(data: any): Observable<any> {\n    const id = typeof data.task === 'number' ? data.task : data.task.id;\n    const page = data.page;\n    console.log('delete task:', id);\n    return this.http.post<Task>(this.removeURL, { id, page }, this.httpOptions);\n  }\n\n  // private log(message: string) {\n  //   this.messageService.add(`TaskService: ${message}`);\n  // }\n\n  // private handleError<T>(operation = \"operation\", result?: T) {\n  //   return (error: any): Observable<T> => {\n  //     // TODO: send the error to remote logging infrastructure\n  //     console.error(error); // log to console instead\n\n  //     // TODO: better job of transforming error for user consumption\n  //     this.log(`${operation} failed: ${error.message}`);\n\n  //     // Let the app keep running by returning an empty result.\n  //     return of(result as T);\n  //   };\n  // }\n}\n","import { HostListener, Component, OnInit } from '@angular/core';\nimport { NotifierService } from 'angular-notifier';\n// import { MessageService } from '../message.service';\nimport { TaskService } from '../task.service';\nimport { Task } from '../task';\n// import { Page } from '../page';\n// import { TASKS } from '../mock-tasks'; // remove on prod\n\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.scss']\n})\nexport class TaskComponent implements OnInit {\n  tasks: Task[] = [];\n  // tasks: Task[] = TASKS; // remove on prod\n  sortKey = 'title';\n  sortWay = 'inc';\n  page = 1;\n  prev = null;\n  next = null;\n  taskPerPage = 5;\n\n  selectedTask: Task;\n  isInserting = false;\n  isNewConfirmed = false;\n  isNewOnMain = false;\n  descCtrl = false;\n\n  private readonly notifier: NotifierService;\n\n  // for createform\n  @HostListener('window:keydown', ['$event'])\n  handleKeyDown(event: KeyboardEvent) {\n    if (event.key === 'Escape') {\n      this.onClose();\n    }\n  }\n\n  constructor(\n    private taskService: TaskService,\n    notifierService: NotifierService\n    // private messageService: MessageService\n  ) {\n    this.notifier = notifierService;\n  }\n\n  ngOnInit(): void {\n    this.getTasks();\n  }\n\n  getTasks(): void {\n    const params = {\n      page: this.page,\n      sortKey: this.sortKey,\n      sortWay: this.sortWay,\n      taskPerPage: this.taskPerPage,\n    };\n    this.taskService.getTasks(params).subscribe(data => {\n      console.log(data);\n      this.tasks = data.results;\n      this.page = data.page;\n      this.prev = data.prev;\n      this.next = data.next;\n      this.taskPerPage = data.taskPerPage;\n    });\n  }\n\n  delete(task: Task): void {\n    this.tasks = this.tasks.filter(h => h !== task);\n    const sendData = {\n      task,\n      page: this.page,\n    };\n    this.taskService.deleteTask(sendData).subscribe(data => {\n      console.log(data);\n      this.page = data.page;\n      // notify\n      this.notifier.notify('info', 'Задача удалена');\n      this.getTasks();\n    });\n  }\n\n  add(\n    taskTitle: string,\n    taskDescribe: string,\n    taskUser: string,\n    taskEmail: string\n  ): void {\n    console.log(\n      taskTitle,\n      taskDescribe,\n      taskUser,\n      taskEmail,\n      this.isNewConfirmed,\n      this.isNewOnMain\n    );\n    if (!taskTitle || !taskUser || !taskEmail) {\n      this.notifier.notify('warning', 'Поля \\'Имя задачи\\', \\'ФИО\\' и \\'Email\\' не должны быть пустыми!');\n      return;\n    }\n\n    const newtask = {\n      title: taskTitle,\n      description: taskDescribe,\n      user: taskUser,\n      email: taskEmail,\n      isCofirmed: this.isNewConfirmed,\n      onMain: this.isNewOnMain\n    };\n\n    this.isNewConfirmed = false;\n    this.isNewOnMain = false;\n\n    this.taskService.addTask({ newtask } as any).subscribe(task => {\n      // this.tasks.push(task);\n      console.log(task);\n      this.page = 1;\n      this.sortKey = 'pub_date';\n      this.sortWay = 'dec';\n      this.getTasks();\n      // notify\n      this.notifier.notify('success', 'Задача успешно добавлена!');\n    });\n  }\n\n  onSelect(task: Task): void {\n    this.selectedTask = task;\n    // this.messageService.add(`TaskService: Selected task id=${task.id}`);\n  }\n\n  sort(key) {\n    if (key === this.sortKey) {\n      if (this.sortWay === 'inc') {\n        this.sortWay = 'dec';\n      } else {\n        this.sortWay = 'inc';\n      }\n    } else {\n      this.sortKey = key;\n      this.sortWay = 'inc';\n    }\n    this.page = 1;\n    this.getTasks();\n  }\n\n  setPage(page) {\n    this.page = page;\n    this.getTasks();\n  }\n\n  onInsert(): void {\n    this.isInserting = true;\n  }\n\n  onClose(): void {\n    this.isInserting = false;\n    this.selectedTask = null;\n  }\n}\n","<div class=\"pageTitle\">\n    <h2 class=\"\">Список задач <button class=\"createBtn\" (click)=\"onInsert()\" title=\"Создать задачу\">\n            <i class=\"fas fa-plus\"></i>\n        </button>\n\n    </h2>\n    <div>\n        <label class=\"legend \" for=\"descCtrl\">\n            <input id=\"descCtrl\" type=\"checkbox\" class=\"legend__switcher\" [(ngModel)]=\"descCtrl\" name=\"newConfirmed\">\n            <svg class=\"legend__icon\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n                version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 125\" enable-background=\"new 0 0 100 100\"\n                xml:space=\"preserve\">\n                <g>\n                    <path class=\"legend__icon_box\"\n                        d=\"M67.624,72.538c-2.295-11.419-4.692-24.843-2.153-36.414c0.107-0.49,0.051-0.926-0.111-1.293   c-0.243-0.738-0.866-1.327-1.881-1.32c-12.609,0.119-25.143,1.758-37.752,1.875c-2.294,0.022-2.608,3.081-0.95,3.914   c-0.02,0.119-0.034,0.238-0.034,0.37c0,0-0.192,23.523,2.231,35.075c0,0,0.005,0.015,0.007,0.024   c-0.222,0.963,0.168,1.986,1.432,2.182c10.363,1.617,20.406-1.573,30.752-1.803c2.659-0.059,2.664-4.187,0-4.127   c-9.452,0.207-18.875,3.189-28.319,2.117c-2.211-10.998-1.973-22.651-1.978-33.469c0-0.081-0.015-0.151-0.024-0.227   c10.735-0.297,21.417-1.488,32.15-1.746c-1.863,11.68,0.366,24.572,2.651,35.934C64.17,76.245,68.146,75.137,67.624,72.538z\" />\n                    <path class=\"legend__icon_check\"\n                        d=\"M21.444,51.573c6.405,6.409,12.812,12.809,19.217,19.214c1.751,1.754,4.596,1.275,5.877-0.755   c9.353-14.826,19.448-29.436,32.601-41.167c3.608-3.217-1.703-8.49-5.289-5.29c-13.596,12.127-24.106,27.36-33.775,42.683   c1.961-0.254,3.919-0.507,5.877-0.76c-6.405-6.405-12.812-12.807-19.215-19.214C23.324,42.869,18.034,48.159,21.444,51.573   L21.444,51.573z\" />\n                </g><text x=\"0\" y=\"115\" fill=\"#000000\" font-size=\"5px\" font-weight=\"bold\"\n                    font-family=\"'Helvetica Neue', Helvetica, Arial-Unicode, Arial, Sans-serif\">Created by Alice\n                    Mortaro</text><text x=\"0\" y=\"120\" fill=\"#000000\" font-size=\"5px\" font-weight=\"bold\"\n                    font-family=\"'Helvetica Neue', Helvetica, Arial-Unicode, Arial, Sans-serif\">from the Noun\n                    Project</text>\n            </svg>\n            <span class=\"legend__text\">Показывать описание задач</span>\n        </label>\n    </div>\n</div>\n\n\n<nav class=\"menu taskMenu\">\n    <!-- <div class=\"menu__item\">\n        <button (click)=\"sort('status')\" class=\"menuBtn sortBtn\" title=\"Сортировка по статусу\">\n            <i class=\"fas fa-sort\" aria-hidden=\"true\"></i>Статус</button>\n    </div> -->\n    <div class=\"menu__item taskTitle\">\n        <button (click)=\"sort('title')\" class=\"menuBtn sortBtn\" title=\"Сортировка по заголовку\">\n            <i class=\"fas fa-sort\" aria-hidden=\"true\"></i>Заголовок</button>\n    </div>\n    <div class=\"menu__item taskUser\">\n        <button (click)=\"sort('user')\" class=\"menuBtn sortBtn\" title=\"Сортировка по имени\">\n            <i class=\"fas fa-sort\" aria-hidden=\"true\"></i>Имя</button>\n    </div>\n    <div class=\"menu__item taskEmail\">\n        <button (click)=\"sort('email')\" class=\"menuBtn sortBtn\" title=\"Сортировка по почте\">\n            <i class=\"fas fa-sort\" aria-hidden=\"true\"></i>Email</button>\n    </div>\n    <div class=\"menu__item taskDate\">\n        <button (click)=\"sort('pub_date')\" class=\"menuBtn sortBtn\" title=\"Сортировка по дате\">\n            <i class=\"fas fa-sort\" aria-hidden=\"true\"></i>Дата</button>\n    </div>\n    <div class=\"menu__item pageCtrlBox\">\n        <div class=\"pageCtrl\">\n            <input id=\"taskPerPage\" name=\"taskPerPage\" type=\"number\" min=\"5\" max=\"50\"\n                class=\"input-number pageCtrl__item\" [(ngModel)]=\"taskPerPage\">\n            <button type=\"button\" class=\"btn pageCtrl__item\" (click)=\"getTasks()\">ок</button>\n        </div>\n    </div>\n</nav>\n<div class=\"taskList\" *ngIf=\"tasks.length; then thenBlock else elseBlock\"></div>\n<ng-template #thenBlock>\n    <div class=\"task\" *ngFor=\"let task of tasks\" [class.task-opened]=\"descCtrl\"\n        [class.task-confirmed]=\"task.isCofirmed\">\n        <div class=\"taskHeader\">\n            <span class=\"taskHeader__item taskTitle\">{{ task.title }}</span>\n            <span class=\"taskHeader__item taskUser\">{{ task.user }}</span>\n            <span class=\"taskHeader__item taskEmail\">{{ task.email }}</span>\n            <span class=\"taskHeader__item taskDate\">{{ task.pub_date }}</span>\n\n            <div class=\"taskHeader__item btnGroup taskDate\">\n                <button type=\"button\" class=\"btn taskEdit\" (click)=\"onSelect(task)\" title=\"Изменить\">\n                    <i class=\"far fa-edit\" aria-hidden=\"true\"></i>\n                </button>\n                <button (click)=\"delete(task)\" type=\"button\" class=\"btn taskRemove\" title=\"Удалить\">\n                    <i class=\"far fa-trash-alt\" aria-hidden=\"true\"></i>\n                </button>\n            </div>\n        </div>\n        <div class=\"taskBody\" *ngIf=\"task.description\">\n            <div>{{ task.description }}</div>\n        </div>\n    </div>\n</ng-template>\n\n<ng-template #elseBlock>\n    <div class=\"task task-empty\">\n        Список задач пуст\n    </div>\n</ng-template>\n\n<!-- commint on link -->\n<app-task-detail [task]=\"selectedTask\" (taskChange)=\"onClose()\"></app-task-detail>\n<notifier-container></notifier-container>\n\n<form class=\"taskForm\" state=\"visible\" *ngIf=\"isInserting\">\n    <h2 class=\"taskTitle\">Добавление задачи</h2>\n    <input type=\"text\" name=\"title\" placeholder=\"Имя задачи\" class=\"inputField\" #taskTitle required>\n    <textarea type=\"text\" name=\"description\" placeholder=\"Описание\" class=\"inputField\" #taskDescribe></textarea>\n    <input type=\"text\" name=\"user\" placeholder=\"ФИО\" class=\"inputField\" #taskUser>\n    <input type=\"email\" name=\"email\" placeholder=\"Email\" class=\"inputField\" #taskEmail>\n\n    <label class=\"legend\" for=\"newConfirmed\">\n        <input id=\"newConfirmed\" type=\"checkbox\" class=\"legend__switcher\" [(ngModel)]=\"isNewConfirmed\"\n            name=\"newConfirmed\">\n        <svg class=\"legend__icon\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n            version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 125\" enable-background=\"new 0 0 100 100\"\n            xml:space=\"preserve\">\n            <g>\n                <path class=\"legend__icon_box\"\n                    d=\"M67.624,72.538c-2.295-11.419-4.692-24.843-2.153-36.414c0.107-0.49,0.051-0.926-0.111-1.293   c-0.243-0.738-0.866-1.327-1.881-1.32c-12.609,0.119-25.143,1.758-37.752,1.875c-2.294,0.022-2.608,3.081-0.95,3.914   c-0.02,0.119-0.034,0.238-0.034,0.37c0,0-0.192,23.523,2.231,35.075c0,0,0.005,0.015,0.007,0.024   c-0.222,0.963,0.168,1.986,1.432,2.182c10.363,1.617,20.406-1.573,30.752-1.803c2.659-0.059,2.664-4.187,0-4.127   c-9.452,0.207-18.875,3.189-28.319,2.117c-2.211-10.998-1.973-22.651-1.978-33.469c0-0.081-0.015-0.151-0.024-0.227   c10.735-0.297,21.417-1.488,32.15-1.746c-1.863,11.68,0.366,24.572,2.651,35.934C64.17,76.245,68.146,75.137,67.624,72.538z\" />\n                <path class=\"legend__icon_check\"\n                    d=\"M21.444,51.573c6.405,6.409,12.812,12.809,19.217,19.214c1.751,1.754,4.596,1.275,5.877-0.755   c9.353-14.826,19.448-29.436,32.601-41.167c3.608-3.217-1.703-8.49-5.289-5.29c-13.596,12.127-24.106,27.36-33.775,42.683   c1.961-0.254,3.919-0.507,5.877-0.76c-6.405-6.405-12.812-12.807-19.215-19.214C23.324,42.869,18.034,48.159,21.444,51.573   L21.444,51.573z\" />\n            </g><text x=\"0\" y=\"115\" fill=\"#000000\" font-size=\"5px\" font-weight=\"bold\"\n                font-family=\"'Helvetica Neue', Helvetica, Arial-Unicode, Arial, Sans-serif\">Created by Alice\n                Mortaro</text><text x=\"0\" y=\"120\" fill=\"#000000\" font-size=\"5px\" font-weight=\"bold\"\n                font-family=\"'Helvetica Neue', Helvetica, Arial-Unicode, Arial, Sans-serif\">from the Noun Project</text>\n        </svg>\n        <span class=\"legend__text\">выполнена</span>\n    </label>\n\n    <label class=\"legend\" for=\"newOnMain\">\n        <input id=\"newOnMain\" type=\"checkbox\" class=\"legend__switcher\" [(ngModel)]=\"isNewOnMain\" name=\"newOnMain\">\n        <svg class=\"legend__icon\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n            version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 125\" enable-background=\"new 0 0 100 100\"\n            xml:space=\"preserve\">\n            <g>\n                <path class=\"legend__icon_box\"\n                    d=\"M67.624,72.538c-2.295-11.419-4.692-24.843-2.153-36.414c0.107-0.49,0.051-0.926-0.111-1.293   c-0.243-0.738-0.866-1.327-1.881-1.32c-12.609,0.119-25.143,1.758-37.752,1.875c-2.294,0.022-2.608,3.081-0.95,3.914   c-0.02,0.119-0.034,0.238-0.034,0.37c0,0-0.192,23.523,2.231,35.075c0,0,0.005,0.015,0.007,0.024   c-0.222,0.963,0.168,1.986,1.432,2.182c10.363,1.617,20.406-1.573,30.752-1.803c2.659-0.059,2.664-4.187,0-4.127   c-9.452,0.207-18.875,3.189-28.319,2.117c-2.211-10.998-1.973-22.651-1.978-33.469c0-0.081-0.015-0.151-0.024-0.227   c10.735-0.297,21.417-1.488,32.15-1.746c-1.863,11.68,0.366,24.572,2.651,35.934C64.17,76.245,68.146,75.137,67.624,72.538z\" />\n                <path class=\"legend__icon_check\"\n                    d=\"M21.444,51.573c6.405,6.409,12.812,12.809,19.217,19.214c1.751,1.754,4.596,1.275,5.877-0.755   c9.353-14.826,19.448-29.436,32.601-41.167c3.608-3.217-1.703-8.49-5.289-5.29c-13.596,12.127-24.106,27.36-33.775,42.683   c1.961-0.254,3.919-0.507,5.877-0.76c-6.405-6.405-12.812-12.807-19.215-19.214C23.324,42.869,18.034,48.159,21.444,51.573   L21.444,51.573z\" />\n            </g><text x=\"0\" y=\"115\" fill=\"#000000\" font-size=\"5px\" font-weight=\"bold\"\n                font-family=\"'Helvetica Neue', Helvetica, Arial-Unicode, Arial, Sans-serif\">Created by Alice\n                Mortaro</text><text x=\"0\" y=\"120\" fill=\"#000000\" font-size=\"5px\" font-weight=\"bold\"\n                font-family=\"'Helvetica Neue', Helvetica, Arial-Unicode, Arial, Sans-serif\">from the Noun Project</text>\n        </svg>\n        <span class=\"legend__text\">показывать на главной</span>\n    </label>\n    <br>\n\n    <div class=\"btnGroup\">\n        <button type=\"button\" class=\"btn\" (click)=\"onClose()\">Отмена</button>\n        <button type=\"confirm\" class=\"btn btnConfirm\"\n            (click)=\"add(taskTitle.value, taskDescribe.value, taskUser.value, taskEmail.value); taskTitle.value=''; taskDescribe.value=''; taskUser.value=''; taskEmail.value=''\">Создать</button>\n    </div>\n\n    <button type=\"button\" class=\"btn btnClose\" (click)=\"onClose()\" title=\"Закрыть\">\n        <i class=\"fas fa-times\" aria-hidden=\"true\"></i>\n    </button>\n</form>\n\n<nav class=\"pagination\" *ngIf=\"prev || next\">\n    <div class=\"pagination__item\" *ngIf=\"prev\">\n        <button class=\"paginationContent\" (click)=\"setPage(prev)\" title=\"Предыдущая страница\">prev</button>\n    </div>\n    <div class=\"pagination__item\">\n        <span class=\"paginationContent\">{{ page }}</span>\n    </div>\n    <div class=\"pagination__item\" *ngIf=\"next\">\n        <button class=\"paginationContent\" (click)=\"setPage(next)\" title=\"Следущая страница\">next</button>\n    </div>\n</nav>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}