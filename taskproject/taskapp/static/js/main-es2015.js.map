{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/message.service.ts","./src/app/messages/messages.component.ts","./src/app/messages/messages.component.html","./src/app/mock-tasks.ts","./src/app/task-detail/task-detail.component.ts","./src/app/task-detail/task-detail.component.html","./src/app/task.service.ts","./src/app/task/task.component.ts","./src/app/task/task.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TaskComponent } from './task/task.component';\nimport { DashboardComponent }   from './dashboard/dashboard.component';\nimport { TaskDetailComponent }  from './task-detail/task-detail.component';\n\nconst routes: Routes = [\n\t{ path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n\t{ path: 'dashboard', component: DashboardComponent },\n\t{ path: 'tasklist', component: TaskComponent },\n\t{ path: 'detail/:id', component: TaskDetailComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.scss\"]\n})\nexport class AppComponent {\n  title = \"Менеджер задач\";\n}\n","<header>\n\t<nav class=\"menu mainMenu\">\n<!-- \t    <div class=\"menu__item menuBrand\">\n\t    \t<a routerLink=\"/\" class=\"menuItem__content\">\n\t    \t\t<i class=\"fas fa-home\"></i>\n\t    \t</a>\n\t    </div> -->\n\t    <div class=\"menu__item\">\n\t        <a routerLink=\"/dashboard\" class=\"menuItem__content\">Главная</a>\n\t    </div>\n\t    <div class=\"menu__item\">\n\t        <a routerLink=\"/tasklist\" class=\"menuItem__content\">Задачи</a>\n\t    </div>\n\t</nav>\n</header>\n\n<main>\n\t<h1 class=\"pageTitle\">{{ title }}</h1>\n\t<router-outlet></router-outlet>\n</main>\n\n<app-messages></app-messages>","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from \"./app.component\";\nimport { TaskComponent } from \"./task/task.component\";\nimport { TaskDetailComponent } from './task-detail/task-detail.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\n@NgModule({\n  declarations: [AppComponent, TaskComponent, TaskDetailComponent, MessagesComponent, DashboardComponent],\n  imports: [BrowserModule, FormsModule, AppRoutingModule, HttpClientModule,],\n  providers: [],\n  // providers: [{provide: APP_BASE_HREF, useValue : '/' }]\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Task } from '../task';\nimport { TaskService } from '../task.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\ttasks: Task[] = [];\t\n  selectedTask: Task;\n  pageData: {};\n\n  constructor(private taskService: TaskService) { }\n\n  ngOnInit(): void {\n  \tthis.getTasks();\n  }\n\n  getTasks(): void {\n    const self = this;\n    this.taskService.getTasks()\n      .subscribe(function(tasks) {\n        console.log(tasks)\n        self.tasks = tasks.results;\n        self.pageData = tasks;\n      });\n  \t// this.taskService.getTasks()\n  \t// \t.subscribe(tasks => this.tasks = tasks.slice(0, 3))\n  }\n\n  onSelect(task: Task): void {\n    this.selectedTask = task;\n    // this.messageService.add(`TaskService: Selected task id=${task.id}`);\n  }\n}\n","<section>\n\t<h1>Основные задачи</h1>\n\t<nav class=\"taskInfo\">Выполнено: 0/3</nav>\n\t<div class=\"task\" *ngFor=\"let task of tasks\">\n\t\t<div class=\"taskValue taskState\"><input type=\"checkbox\"></div>\n\t\t<span class=\"taskValue taskTitle\">task.title</span>\n\t\t<div class=\"taskValue\">\n\t\t\t<button type=\"button\" class=\"taskDetails\" (click)=\"onSelect(task)\">-></button>\n\t\t\t<!-- <a type=\"button\" class=\"taskDetails\" routerLink=\"/detail/{{ task.id }}\">-></a> -->\n\t\t</div>\n\t</div>\n</section>\n\n<!-- commint on link -->\n<app-task-detail [task]=\"selectedTask\"></app-task-detail>","import { Injectable } from \"@angular/core\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MessageService {\n  messages: string[] = [];\n\n  add(message: string) {\n    this.messages.push(message);\n  }\n\n  clear() {\n    this.messages = [];\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { MessageService } from \"../message.service\";\n\n@Component({\n  selector: \"app-messages\",\n  templateUrl: \"./messages.component.html\",\n  styleUrls: [\"./messages.component.scss\"]\n})\nexport class MessagesComponent implements OnInit {\n  constructor(public messageService: MessageService) {}\n\n  ngOnInit(): void {}\n}\n","<div *ngIf=\"messageService.messages.length\">\n    <h2>Messages</h2>\n    <button class=\"clear\" (click)=\"messageService.clear()\">clear</button>\n    <div *ngFor='let message of messageService.messages'> {{message}} </div>\n</div>","import { Task } from \"./task\";\n\nexport const TASKS: Task[] = [\n  {\n    id: 1,\n    title: \"Task Title 1\",\n    description: \"Some text here\",\n    user: \"Mirehiko\",\n    email: \"mirehiko@gmail.ru\",\n    isCofirmed: false\n  },\n  {\n    id: 2,\n    title: \"Task Title 2\",\n    description: \"Some text here\",\n    user: \"Mirehiko\",\n    email: \"mirehiko@gmail.ru\",\n    isCofirmed: false\n  },\n  {\n    id: 3,\n    title: \"Task Title 3\",\n    description: \"Some text here\",\n    user: \"Mirehiko\",\n    email: \"mirehiko@gmail.ru\",\n    isCofirmed: false\n  },\n  {\n    id: 4,\n    title: \"Task Title 4\",\n    description: \"Some text here\",\n    user: \"Mirehiko\",\n    email: \"mirehiko@gmail.ru\",\n    isCofirmed: false\n  }\n];\n","import { Component, OnInit, Input } from \"@angular/core\";\n//for work with link\n// import { ActivatedRoute } from '@angular/router';\n// import { Location } from '@angular/common';\n\nimport { Task } from \"../task\";\nimport { TaskService }  from '../task.service';\n\n@Component({\n  selector: \"app-task-detail\",\n  templateUrl: \"./task-detail.component.html\",\n  styleUrls: [\"./task-detail.component.scss\"]\n})\nexport class TaskDetailComponent implements OnInit {\n  @Input() task: Task; //old\n  // task: Task;//for link\n\n  constructor() {}\n  // constructor(//for link\n  //   private route: ActivatedRoute,\n  //   private taskService: TaskService,\n  //   private location: Location\n  // ) {}\n\n\n  ngOnInit(): void {} //old\n  // ngOnInit(): void {//for link\n  //   this.getTask();\n  // }\n\n  // getTask(): void {//for link\n  //   const id = +this.route.snapshot.paramMap.get('id');\n  //   this.taskService.getTask(id)\n  //     .subscribe(task => this.task = task);\n  // }\n\n  onClose(task: Task): void {\n    this.task = null;\n  }\n\n  onConfirm(task: Task): void {\n    this.task = null;\n  }\n}\n","<form class=\"taskForm\" state=\"visible\" *ngIf=\"task\">\n    <h2 class=\"taskTitle\">Редактирование</h2>\n    <input type=\"hidden\" name=id value=\"{{ task.id }}\">\n    <input type=\"text\" name=\"title\" placeholder=\"Имя задачи\" class=\"inputField\" [(ngModel)]=\"task.title\">\n    <textarea type=\"text\" name=\"description\" placeholder=\"Описание\" class=\"inputField\"\n        [(ngModel)]=\"task.description\"></textarea>\n    <input type=\"text\" name=\"user\" placeholder=\"ФИО\" class=\"inputField\" [(ngModel)]=\"task.user\">\n    <input type=\"email\" name=\"email\" placeholder=\"Email\" class=\"inputField\" [(ngModel)]=\"task.email\">\n    <button type=\"confirm\" class=\"btn btnConfirm\" (click)=\"onConfirm(task)\">Принять</button>\n    <button type=\"button\" class=\"btn btnClose\" (click)=\"onClose(task)\">\n        <i class=\"fas fa-times\" aria-hidden=\"true\"></i>\n    </button>\n</form>","import { Injectable } from \"@angular/core\";\nimport { Observable, of } from \"rxjs\";\nimport { MessageService } from \"./message.service\";\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Task } from \"./task\";\nimport { Page } from \"./page\";\nimport { TASKS } from \"./mock-tasks\";\nimport { PAGES } from \"./mock-pages\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TaskService {\n  private taskUrl = 'api/tasklist';\n\n  constructor(private http: HttpClient, private messageService: MessageService) {}\n \n  // getTasks(): Observable<Task[]> {\n  //   this.messageService.add(\"TaskService: fetched tasks\");\n  //   return of(TASKS);\n  //   // return this.http.get<Task[]>(this.taskUrl);\n  // }\n  getTasks(): Observable<Page> {\n    this.messageService.add(\"TaskService: fetched tasks\");\n    // return of(PAGES);\n    return this.http.get<Page>(this.taskUrl);\n  }\n\tgetTask(id: number): Observable<Task> {\n\t  this.messageService.add(`TaskService: fetched task id=${id}`);\n\t  return of(TASKS.find(task => task.id === id));\n\t}\n\n  private log(message: string) {\n    this.messageService.add(`TaskService: ${message}`);\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { Task } from \"../task\";\nimport { TaskService } from \"../task.service\";\nimport { MessageService } from \"../message.service\";\n\n@Component({\n  selector: \"app-task\",\n  templateUrl: \"./task.component.html\",\n  styleUrls: [\"./task.component.scss\"]\n})\nexport class TaskComponent implements OnInit {\n  tasks: Task[];\n  pageData: {};\n  \n\n  selectedTask: Task;\n  openedTask: Task;\n\n  constructor(\n    private taskService: TaskService,\n    private messageService: MessageService\n  ) {}\n\n  ngOnInit(): void {\n    this.getTasks();\n  }\n\n  getTasks(): void {\n    const self = this;\n    this.taskService.getTasks()\n      .subscribe(function(tasks) {\n        console.log(tasks)\n        self.tasks = tasks.results;\n        self.pageData = tasks;\n      });\n    // this.taskService.getTasks().subscribe(tasks => (this.tasks = tasks));\n  }\n\n  onSelect(task: Task): void {\n    this.selectedTask = task;\n    this.messageService.add(`TaskService: Selected task id=${task.id}`);\n  }\n\n  onOpen(task: Task): void {\n    this.openedTask = task;\n  }\n\n  // onClose(task: Task): void {\n  //   this.selectedTask = null;\n  // }\n\n  // onConfirm(task: Task): void {\n  //   this.selectedTask = null;\n  // }\n}\n","<h2 class=\"\">Список задач</h2>\n\n<div class=\"taskList\">\n    <div class=\" task\" *ngFor=\"let task of tasks\" [class.task-opened]=\"task === openedTask\">\n        <div class=\"taskHeader\">\n            <span class=\"taskHeader__item taskTitle\">{{ task.title }}</span>\n            <span class=\"taskHeader__item taskUser\">{{ task.user }}</span>\n            <span class=\"taskHeader__item taskEmail\">{{ task.email }}</span>\n            <!-- for link -->\n<!--             <a class=\"btn taskHeader__item taskEdit\" routerLink=\"/detail/{{ task.id }}\">\n                edit\n                <i class=\"far fa-edit\" aria-hidden=\"true\"></i>\n            </a> -->\n            <button type=\"button\" class=\"btn taskHeader__item taskEdit\" (click)=\"onSelect(task)\">\n                edit\n                <i class=\"far fa-edit\" aria-hidden=\"true\"></i>\n            </button>\n            <button type=\"button\" class=\"btn taskHeader__item taskRemove\">\n                remove\n                <i class=\"far fa-trash-alt\" aria-hidden=\"true\"></i>\n            </button>\n        </div>\n        <div class=\"taskBody\">\n            <div>{{ task.description }}</div>\n        </div>\n    </div>\n</div>\n\n<!-- commint on link -->\n<app-task-detail [task]=\"selectedTask\"></app-task-detail>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\n\nimport { AppModule } from \"./app/app.module\";\nimport { environment } from \"./environments/environment\";\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}